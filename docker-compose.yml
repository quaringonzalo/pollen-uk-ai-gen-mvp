version: "3.8"

services:
  db:
    image: postgres:16-alpine
    ports: 
      - 5432:5432
    environment:
      POSTGRES_DB: pollen
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username -d pollen"]
      interval: 2s
      timeout: 2s
      retries: 30
    restart: unless-stopped

  # App web
  pollen-app:
    build: .
    # Si tu app escucha en 7000, usa "6000:7000"
    ports:
      - "127.0.0.1:6000:6000"
    environment:
      DATABASE_URL: postgresql://username:password@db:5432/pollen
      SESSION_SECRET: your-secure-session-secret
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - pollen-app
    restart: unless-stopped

  # Servicio para aplicar migraciones (one-off)
  migrate:
    build: .
    environment:
      DATABASE_URL: postgresql://username:password@db:5432/pollen
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -lc "
        npm run db:push
      "
    profiles: ["ops"]   # corre solo cuando lo pedís

  # Servicio para seed (one-off)
  seed:
    build: .
    environment:
      DATABASE_URL: postgresql://username:password@db:5432/pollen
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -lc "
        npm run db:seed
      "
    profiles: ["ops"]   # corre solo cuando lo pedís

volumes:
  postgres_data: